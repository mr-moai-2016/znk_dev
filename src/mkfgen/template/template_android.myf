@def_quote [' ']

@@V config
obj_sfx  = ['o']
exe_sfx  = ['']
slib_pfx = ['lib']
ilib_pfx = ['lib']
dlib_pfx = ['lib']
slib_sfx = ['a']
ilib_sfx = ['so']
dlib_sfx = ['so']
template_include_path = ['-I$(MY_LIBS_ROOT)/$[lib_dir]$ \']
template_lib_ver_sfx  = ['']
template_lib_file     = ['$[lib_pfx]$$[lib_name]$$[lib_ver_sfx]$.$[lib_sfx]$']
template_libs_path    = ['$(MY_LIBS_ROOT)/$[lib_dir]$/out_dir/$(ABINAME)/$[lib_file]$']
template_runtime_path = ['$(MY_LIBS_ROOT)/$(DLIBS_DIR)/$[lib_file]$']
template_sublib       = ['$[submkf_dir]$/$O/$[lib_pfx]$$[sublib_name]$.$[slib_sfx]$']
shell = ['dos']
@@.

@@L mkdir_rule
$[obj_dir]$:
	if not exist $[obj_dir]$ mkdir $[obj_dir]$
@@.

@@L exefile_rule
$[exe_file]$: $[objs]$
	$(LINKER) -Wl,--gc-sections -Wl,-z,nocopyreloc $(RPATH_LINK) \
	-lgcc \
	$[objs]$ $(SUB_LIBS) \
	-Wl,-rpath,. $[dep_libs]$ \
	$(LINKER_OPT) \
	-o $[exe_file]$
@@.

@@L dlibfile_rule
$[dlib_file]$: $[objs]$
	if exist $[dlib_file]$ del $[dlib_file]$
	$(LINKER) -shared -Wl,-soname,$[dlib_name]$ \
	-lgcc \
	$[objs]$ $(SUB_LIBS) \
	-Wl,-rpath,. $[dep_libs]$ \
	$(LINKER_OPT) \
	-o $[dlib_file]$
	$(STRIP_UNNEEDED) $[dlib_file]$
@@.

@@L slibfile_rule
$[slib_file]$: $[objs]$
	if exist $[slib_file]$ del $[slib_file]$
	$(LIBAR) crsD $[slib_file]$ $[objs]$ $(SUB_LIBS)
@@.

@@L gsl_rule
gsl.myf: $[slib_file]$
	if test -e $[gslconv]$ ; then $[gslconv]$ -g gsl.myf $[slib_file]$ $(MACHINE) ; fi

gsl.def: gsl.myf
	if test -e $[gslconv]$ ; then $[gslconv]$ -d gsl.myf gsl.def ; fi
@@.

@@L suffix_rule
$[obj_dir]$\\%.o: $[src_dir]$\%.$[src_sfx]$
	$(COMPILER) -I$S $(INCLUDE_FLAG) -o $@ -c $<
@@.

@@L rc_rule
$[res_file]$:
@@.

@@L submkf_rule
.PHONY : submkf_$[submkf_dir]$
submkf_$[submkf_dir]$:
	@echo ======
	@echo === Entering [$[submkf_dir]$] ===
	$(MAKE_CMD) -f Makefile_$[mkf_id]$.mak -C $[submkf_dir]$
	@echo === Leaving [$[submkf_dir]$] ===
	@echo ======
@@.

@@L install_rule
install:
	@echo _
	@echo === Install all product files ===
	if not exist $[install_dir]$ mkdir $[install_dir]$
	@for %%a in ( $(PRODUCT_FILES) ) do @if exist "%%a" @$(CP) /F "%%a" $[install_dir]$\ $(CP_END)
@@.

@@L clean_here_rule
	del /Q $O\ 
@@.

@@L clean_sub_rule
	@echo === Entering [$[submkf_dir]$] ===
	$(MAKE_CMD) -f Makefile_$[mkf_id]$.mak clean -C $[submkf_dir]$
	@echo === Leaving [$[submkf_dir]$] ===
@@.
